spring.application.name=CharityWebApp

# URL de base de l'application
app.base-url=http://localhost:8080

# Emplacements des ressources statiques
spring.web.resources.static-locations=classpath:/static/,file:uploads/

# Configuration de la base de données MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/charitydb
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Configuration JPA/Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Configuration de la sécurité
spring.main.allow-bean-definition-overriding=true
spring.main.allow-circular-references=true

spring.messages.basename=lang/messages
spring.messages.encoding=UTF-8

server.port=8080

# Configuration des logs
logging.level.org.springframework.security=DEBUG
logging.level.ma.emsi.charitywebapp=DEBUG
logging.level.org.hibernate.SQL=DEBUG

# Google OAuth2 - UTILISER DES VARIABLES D'ENVIRONNEMENT
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:placeholder-value}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:placeholder-value}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# Stripe - UTILISER DES VARIABLES D'ENVIRONNEMENT
stripe.api.key=${STRIPE_API_KEY:placeholder-value}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET:placeholder-value}

# Configuration des images de profil
app.profile-images.upload-dir=./uploads/profile-images
app.profile-images.max-size=5242880
app.profile-images.allowed-types=image/jpeg,image/png

# Configuration de l'envoi d'emails - UTILISER DES VARIABLES D'ENVIRONNEMENT
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_USERNAME:placeholder-value}
spring.mail.password=${EMAIL_PASSWORD:placeholder-value}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Configuration pour le développement (à enlever en production)
spring.mail.test-connection=false
